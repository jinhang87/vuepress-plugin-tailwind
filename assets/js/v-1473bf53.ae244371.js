"use strict";(self.webpackChunk_jinhang_vuepress_plugin_tailwind=self.webpackChunk_jinhang_vuepress_plugin_tailwind||[]).push([[871],{765:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-1473bf53",path:"/demo/",title:"Demo",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"In markdown",slug:"in-markdown",children:[{level:3,title:"code",slug:"code",children:[]},{level:3,title:"result",slug:"result",children:[]}]},{level:2,title:"In components",slug:"in-components",children:[{level:3,title:"code",slug:"code-1",children:[]},{level:3,title:"result",slug:"result-1",children:[]}]},{level:2,title:"More complex example",slug:"more-complex-example",children:[{level:3,title:"code",slug:"code-2",children:[]},{level:3,title:"result",slug:"result-2",children:[]}]}],filePathRelative:"demo/index.md",git:{updatedTime:1635434846e3,contributors:[{name:"jinhang",email:"jinhang87@163.com",commits:1},{name:"kawarimidoll",email:"kawarimidoll+git@gmail.com",commits:1}]}}},175:(a,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s(252);const e=(0,t.uE)('<h1 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h1><h2 id="in-markdown" tabindex="-1"><a class="header-anchor" href="#in-markdown" aria-hidden="true">#</a> In markdown</h2><p>You can use classes of tailwindcss in your markdown.</p><h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> code</h3><div class="language-markup ext-markup line-numbers-mode"><pre class="language-markup"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-2 text-red-700<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>red text!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> result</h3><div class="mx-2 text-red-700 text-5xl">red text!</div><h2 id="in-components" tabindex="-1"><a class="header-anchor" href="#in-components" aria-hidden="true">#</a> In components</h2><p>You can also use them in the components.</p><h3 id="code-1" tabindex="-1"><a class="header-anchor" href="#code-1" aria-hidden="true">#</a> code</h3><p>Definition:</p><div class="language-markup ext-markup line-numbers-mode"><pre class="language-markup"><code><span class="token comment">&lt;!-- .vuepress/components/RedText.vue --&gt;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-2 text-red-700<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  text<span class="token operator">:</span> String<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Use:</p><div class="language-markup ext-markup line-numbers-mode"><pre class="language-markup"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RedText</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Red text in component!<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="result-1" tabindex="-1"><a class="header-anchor" href="#result-1" aria-hidden="true">#</a> result</h3>',15),p=(0,t.uE)('<h2 id="more-complex-example" tabindex="-1"><a class="header-anchor" href="#more-complex-example" aria-hidden="true">#</a> More complex example</h2><h3 id="code-2" tabindex="-1"><a class="header-anchor" href="#code-2" aria-hidden="true">#</a> code</h3><div class="language-markup ext-markup line-numbers-mode"><pre class="language-markup"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RedText</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Red flex 1!<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RedText</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Red flex 2!<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transform rotate-90 my-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RedText</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Red flex 3!<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-yellow-300<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="result-2" tabindex="-1"><a class="header-anchor" href="#result-2" aria-hidden="true">#</a> result</h3>',4),l={class:"flex"},o={},c=(0,s(744).Z)(o,[["render",function(a,n){const s=(0,t.up)("RedText");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t.Wm)(s,{text:"Red text in component!"}),p,(0,t._)("div",l,[(0,t.Wm)(s,{text:"Red flex 1!"}),(0,t.Wm)(s,{text:"Red flex 2!",class:"transform rotate-90 my-8"}),(0,t.Wm)(s,{text:"Red flex 3!",class:"bg-yellow-300"})])],64)}]])},744:(a,n)=>{n.Z=(a,n)=>{for(const[s,t]of n)a[s]=t;return a}}}]);