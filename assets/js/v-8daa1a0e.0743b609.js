"use strict";(self.webpackChunk_jinhang_vuepress_plugin_tailwind=self.webpackChunk_jinhang_vuepress_plugin_tailwind||[]).push([[509],{464:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-8daa1a0e",path:"/",title:"@jinhang/vuepress-plugin-tailwind",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"tailwindConfig",slug:"tailwindconfig",children:[]},{level:3,title:"Any other key",slug:"any-other-key",children:[]}]},{level:2,title:"Versioning policy",slug:"versioning-policy",children:[]},{level:2,title:"License",slug:"license",children:[]}],filePathRelative:"index.md",git:{updatedTime:163551004e4,contributors:[{name:"jinhang",email:"jinhang87@163.com",commits:1},{name:"kawarimidoll",email:"kawarimidoll+git@gmail.com",commits:1}]}}},25:(n,s,a)=>{a.r(s),a.d(s,{default:()=>N});var e=a(252);const t=(0,e._)("h1",{id:"jinhang-vuepress-plugin-tailwind",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#jinhang-vuepress-plugin-tailwind","aria-hidden":"true"},"#"),(0,e.Uk)(" @jinhang/vuepress-plugin-tailwind")],-1),p=(0,e.Uk)("A VuePress plugin to use "),o={href:"https://github.com/tailwindcss/tailwindcss",target:"_blank",rel:"noopener noreferrer"},l=(0,e._)("code",null,"tailwindcss",-1),i=(0,e.Uk)(" easily."),c=(0,e._)("p",null,"With this plugin, you can use any classes defined by Tailwind CSS, and the unused classes are automatically purged (production only).",-1),u=(0,e.Uk)("This plugin is based on "),r={href:"https://tailwindcss.com/docs/controlling-file-size/#removing-unused-css",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("the official guide of Tailwind CSS"),k=(0,e.Uk)("."),g=(0,e.uE)('<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><ol><li>Install this plugin :</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @jinhang/vuepress-plugin-tailwind\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>Add <code>@tailwind</code> import statements to the beginning of <code>.vuepress/styles/index.scss</code> :</li></ol><div class="language-stylus ext-styl line-numbers-mode"><pre class="language-stylus"><code><span class="token atrule-declaration"><span class="token atrule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule-declaration"><span class="token atrule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule-declaration"><span class="token atrule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token comment">// Add your style definitions below...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>Load this plugin in <code>.vuepress/config.js</code> :</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@jinhang/tailwind&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>‚ö†Ô∏è <em>These configuration files are not created automatically. You have to create them if not exist.</em></p><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2>',9),m=(0,e.Uk)("If you want to use the options, refer to "),h={href:"https://tailwindcss.com/docs/configuration/",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("the Tailwind CSS configuration guide"),f=(0,e.Uk)("."),v=(0,e.uE)('<h3 id="tailwindconfig" tabindex="-1"><a class="header-anchor" href="#tailwindconfig" aria-hidden="true">#</a> tailwindConfig</h3><p>This is the configuration object or path to the configuration file. Use like this :</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;@jinhang/tailwind&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> tailwindConfig<span class="token operator">:</span> <span class="token string">&quot;style/config.js&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The default value is :</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  purge<span class="token operator">:</span> <span class="token punctuation">{</span>\n    content<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sourceDir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.@(js|ts|md|vue|html)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>vuepressDir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.@(js|ts|md|vue|html)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',5),_=(0,e.Uk)("This default value is adjusted for VuePress from "),w={href:"https://tailwindcss.com/docs/controlling-file-size/#removing-unused-css",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("the document"),y=(0,e.Uk)(" to remove unused styles of Tailwind."),U=(0,e._)("p",null,"The priorities of configuration is:",-1),x=(0,e._)("ol",null,[(0,e._)("li",null,[(0,e.Uk)("If there is input "),(0,e._)("code",null,"tailwindConfig"),(0,e.Uk)(", the value is used.")]),(0,e._)("li",null,[(0,e.Uk)("If there is "),(0,e._)("code",null,"tailwind.config.js"),(0,e.Uk)(" in the same directory as "),(0,e._)("code",null,"package.json"),(0,e.Uk)(", the file is used.")]),(0,e._)("li",null,"The default value above is used.")],-1),T=(0,e.Uk)("üí° "),C=(0,e._)("code",null,"sourceDir",-1),I=(0,e.Uk)(" and "),S=(0,e._)("code",null,"vuepressDir",-1),P=(0,e.Uk)(" above are "),W={href:"https://vuepress.vuejs.org/plugin/context-api.html",target:"_blank",rel:"noopener noreferrer"},q=(0,e.Uk)("Context API"),D=(0,e.Uk)(" of VuePress."),A=(0,e.uE)('<p>‚ö†Ô∏è <em>If you use <code>tailwindConfig</code>, the default value is overwritten, not merged.</em></p><h3 id="any-other-key" tabindex="-1"><a class="header-anchor" href="#any-other-key" aria-hidden="true">#</a> Any other key</h3><p>If you use any other key, the option object is merged to the default value of <code>tailwindConfig</code>.</p><p>For example, when you use <code>corePlugins</code> and <code>important</code> like this:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&quot;@jinhang/tailwind&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> corePlugins<span class="token operator">:</span> <span class="token punctuation">{</span> preflight<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> important<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Then, the configuration object is:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  corePlugins<span class="token operator">:</span> <span class="token punctuation">{</span> preflight<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  important<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  purge<span class="token operator">:</span> <span class="token punctuation">{</span>\n    content<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sourceDir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.@(js|md|vue|html)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>vuepressDir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.@(js|md|vue|html)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>To build this document, <code>{ corePlugins: { preflight: false } }</code> is used to enable default style of VuePress.</p><p>üí° <em>If you use <code>tailwindConfig</code>, the other keys are ignored because of the priority.</em></p>',9),O=(0,e.Uk)("‚ö†Ô∏è "),V=(0,e.Uk)("If you use "),E=(0,e._)("code",null,"purge",-1),L=(0,e.Uk)(" key, the default value is overwritten, not merged. It is because this plugin uses "),$={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",target:"_blank",rel:"noopener noreferrer"},z=(0,e.Uk)("Object.assign()"),F=(0,e.Uk)(" to merge objects."),R=(0,e._)("h2",{id:"versioning-policy",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#versioning-policy","aria-hidden":"true"},"#"),(0,e.Uk)(" Versioning policy")],-1),Y=(0,e._)("p",null,"Since v1.0.0, the versioning of this plugin will follow that of Tailwind.",-1),Z=(0,e._)("p",null,"For example, when there is a major version upgrade of Tailwind, this plugin also gets a major upgrade.",-1),G=(0,e._)("h2",{id:"license",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#license","aria-hidden":"true"},"#"),(0,e.Uk)(" License")],-1),H={href:"https://github.com/jinhang87/vuepress-plugin-tailwind/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},J=(0,e.Uk)("MIT"),M={},N=(0,a(744).Z)(M,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[p,(0,e._)("a",o,[l,(0,e.Wm)(a)]),i]),c,(0,e._)("p",null,[u,(0,e._)("a",r,[d,(0,e.Wm)(a)]),k]),g,(0,e._)("p",null,[m,(0,e._)("a",h,[b,(0,e.Wm)(a)]),f]),v,(0,e._)("p",null,[_,(0,e._)("a",w,[j,(0,e.Wm)(a)]),y]),U,x,(0,e._)("p",null,[T,(0,e._)("em",null,[C,I,S,P,(0,e._)("a",W,[q,(0,e.Wm)(a)]),D])]),A,(0,e._)("p",null,[O,(0,e._)("em",null,[V,E,L,(0,e._)("a",$,[z,(0,e.Wm)(a)]),F])]),R,Y,Z,G,(0,e._)("p",null,[(0,e._)("a",H,[J,(0,e.Wm)(a)])])],64)}]])},744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);